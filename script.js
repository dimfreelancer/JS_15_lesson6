'use strict';

/*
Урок №6
Функции, область видимости и замыкание
ОБЯЗАТЕЛЬНОЕ ЗАДАНИЕ:
Это задание выполняется отдельно от нашего проекта с бюджетом!
Для этого задания создайте отдельный репозиторий.
Используйте функции alert, confirm, prompt для общения с пользователем.
Написать игровой бот.
"Загадывание случайного числа от 1 до 100"
Что должна делать программа:
— спрашивает пользователя: "Угадай число от 1 до 100".
— если пользовательское число больше, то бот выводит "Загаданное число меньше" и предлагает ввести новый вариант;
— если пользовательское число меньше, то бот выводит "Загаданное число больше" и предлагает ввести новый вариант;
— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
— если пользователь нажимает "Отмена", то игра заканчивается и выводится сообщение "Игра окончена".
—  если пользовательское число равно загаданному, то игра заканчивается и выводит сообщение  "Поздравляю, Вы угадали!!!".
Программа должны быть выполнена с помощью рекурсии, без единого цикла.
Загаданное число должно храниться «в замыкании»
*/
/*
УСЛОЖНЕННОЕ ЗАДАНИЕ: 

Дописать функционал игрового бота.

Кол-во попыток пользователя должно быть ограничено: 10
— если пользовательское число больше, то бот выводит "Загаданное число меньше, осталось попыток ..." и предлагает ввести новый вариант;
— если пользовательское число меньше, то бот выводит "Загаданное число больше, осталось попыток ..." и предлагает ввести новый вариант;
— если пользователь вводит правильное число, то бот выводит "Поздравляю, Вы угадали!!! Хотели бы сыграть еще?", при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)
— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
— если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.
— если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"

Программа должны быть выполнена с помощью рекурсии, без единого цикла.
Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»
*/


const consoleAlert = (str) => {
    console.log(str);
    alert(str);
}

const consolePrompt = (str) => {
    console.log(str);
    return prompt(str);
}

// let isNumber = (n) => !isNaN(parseFloat(n)) && isFinite(n);
//варианты функции
var isNumber = function isNumber(value) {
   return typeof value === 'number' && isFinite(value);
}

const randomInteger = () => {
    const MIN = 1;
    const MAX = 100;
    let result = Math.floor((MAX * Math.random()) + MIN);
    // console.log('debug result: ', result);
    return result;
};

// var i = 10;
// const randomInteger = () => {
//     const MIN = 1;
//     const MAX = 100;
//     return Math.floor((100 * Math.random()) + 1);
// };






// const main = (seed) => {

//     const next = () => {
//         console.log('Угадайте число от 1 до 100');

//         // let ans = randomInteger();
//         let ans = prompt('Угадайте число от 1 до 100');
//         console.log('ans: ', ans);
//         if (ans === null) {
//             console.log('Вы нажали отмена');
//             return;
//         }
//         ans = parseInt(ans);

//         if (isNaN(ans)) {
//             console.log('Ошибка! Вы ввели строку!!! введите целое число');
//         } else if (seed < ans) {
//             console.log('Загаданное число меньше');
//         } else if (seed > ans) {
//             console.log('Загаданное число БОЛЬШЕ');
//         } else if (seed === ans ) {
//             console.log('Поздравляю, Вы угадали УРААААА!!!!');
//             return;
//         }

//         next();//следующий запуск итеррации рекурсии
//     };

//     //возвращает функцию для замыкания
//     return next;
// };







const main = () => {

    const seed = randomInteger(); //генерим загаданое число - это сохранится в замыкании функции
    let i = 10; //количество попыток храним в замыкании

    const next = () => {
        
        // console.log('Угадайте число от 1 до 100');
        // let ans = prompt('Угадайте число от 1 до 100'); //Ответ пользователя

        let ans = consolePrompt('Угадай число от 1 до 100');

        console.log('Ответ пользователя: ', ans);

        if (ans === null) {
            consoleAlert('Вы нажали отмена\nКонец игры');
            return; //выход из функции по Escape
        };
        ans = parseInt(ans);

        if (isNaN(ans)) {
            //проверка на корректость ввода данных
            consoleAlert('Ошибка! Вы ввели строку!!! введите целое число');
        } else if (seed < ans) {
            consoleAlert('Загаданное число меньше << ' + ans);
        } else if (seed > ans) {
            // console.log('Загаданное число БОЛЬШЕ >>');
            // alert('Загаданное число БОЛЬШЕ >>');
            consoleAlert('Загаданное число БОЛЬШЕ >> ' + ans);
        } else if (seed === ans ) {
            consoleAlert('Поздравляю, Вы угадали УРААААА!!!!\n' 
                    + 'Загаданное число ' + ans);
            return; //выход из функции
        };
        consoleAlert('У вас осталось ' + --i + ' попыток чтобы угадать');
        next(); //следующий запуск итеррации рекурсии
    };

    return next; //возвращаем ссылку на функцию в замыкании
};



// //генерация замыкания в функции
// const play = main(randomInteger());
// play();//по сути наша функция next()
const play = main(); //генерация замыкания в функции
play(); //по сути наша функция next()
